/*
 * This source file was generated by the Gradle 'init' task
 */
package org.cards;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class ShufflerTest {
    long startTime;
    long endTime;
    long duration;
    double seconds;
    Shuffler shuffler;
    Integer[] a1 = new Integer[100];
    Integer[] a2 = new Integer[500];
    Integer[] a3 = new Integer[1000];
    Integer[] a4 = new Integer[5000];
    @BeforeEach
    void setUp() {
        shuffler = new Shuffler();
        for(int i = 1; i<=5000; i++){
            if(i <=100){
                a1[i-1] = i;
                a2[i-1] = i;
                a3[i-1] = i;
                a4[i-1] = i;
            }
            if(i <= 500){
                a2[i-1] = i;
                a3[i-1] = i;
                a4[i-1] = i;
            }
            if(i <= 1000){
                a3[i-1] = i;
                a4[i-1] = i;
            }
            if(i<=5000){
                a4[i-1] = i;
            }
        }

    }

    @Test
    void badShuffle(){
        startTime = System.nanoTime();
        for(int i = 1; i<=4; i++){
            Integer[] a = shuffler.badShuffle(a1);
        }
        for(int i = 1; i<=4; i++){
            Integer[] a = shuffler.badShuffle(a2);
        }
        for(int i = 1; i<=4; i++){
            Integer[] a = shuffler.badShuffle(a3);
        }
        for(int i = 1; i<=4; i++){
            Integer[] a = shuffler.badShuffle(a4);
        }
        endTime = System.nanoTime();
        duration = endTime - startTime;
        seconds = (double)duration / 1_000_000_000.0;
        System.out.println("Duration: " + seconds + " seconds");
    }

    @Test
    void betterShuffle(){
        startTime = System.nanoTime();
        for(int i = 1; i<=4; i++){
            Integer[] a = shuffler.betterShuffle(a1);
        }
        for(int i = 1; i<=4; i++){
            Integer[] a = shuffler.betterShuffle(a2);
        }
        for(int i = 1; i<=4; i++){
            Integer[] a = shuffler.betterShuffle(a3);
        }
        for(int i = 1; i<=4; i++){
            Integer[] a = shuffler.betterShuffle(a4);
        }
        endTime = System.nanoTime();
        duration = endTime - startTime;
        seconds = (double)duration / 1_000_000_000.0;
        System.out.println("Duration: " + seconds + " seconds");
    }

    @Test
    void bestShuffle(){
        startTime = System.nanoTime();
        for(int i = 1; i<=4; i++){
            Integer[] a = shuffler.bestShuffle(a1);
        }
        for(int i = 1; i<=4; i++){
            Integer[] a = shuffler.bestShuffle(a2);
        }
        for(int i = 1; i<=4; i++){
            Integer[] a = shuffler.bestShuffle(a3);
        }
        for(int i = 1; i<=4; i++){
            Integer[] a = shuffler.bestShuffle(a4);
        }
        endTime = System.nanoTime();
        duration = endTime - startTime;
        seconds = (double)duration / 1_000_000_000.0;
        System.out.println("Duration: " + seconds + " seconds");
    }


}
